Inferecing [tensor([3]), tensor([744]), tensor([904])] Traceback (most recent call last):
	File "/tmp2/b10902118/DAVE/main.py", line 928, in <module>
	evaluate(args)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
	return func(*args, **kwargs)
	File "/tmp2/b10902118/DAVE/main.py", line 107, in evaluate
	out, aux, tblr, boxes_pred = model(
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
	return self._call_impl(*args, **kwargs)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
	return forward_call(*args, **kwargs)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 183, in forward
	return self.module(*inputs[0], **module_kwargs[0])
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
	return self._call_impl(*args, **kwargs)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
	return forward_call(*args, **kwargs)
	File "/tmp2/b10902118/DAVE/models/dave.py", line 482, in forward
	tblr = self.box_predictor(
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
	return self._call_impl(*args, **kwargs)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
	return forward_call(*args, **kwargs)
	File "/tmp2/b10902118/DAVE/models/box_prediction.py", line 90, in forward
	x = self.conv1(bb_fts)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
	return self._call_impl(*args, **kwargs)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
	return forward_call(*args, **kwargs)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 460, in forward
	return self._conv_forward(input, self.weight, self.bias)
	File "/tmp2/b10902118/micromamba/envs/dave/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 456, in _conv_forward
	return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 80.82 GiB. GPU 0 has a total capacty of 23.55 GiB of which 11.95 GiB is free. Including non-PyTorch memory, this process has 11.59 GiB memory in use. Of the allocated memory 10.64 GiB is allocated by PyTorch, and 506.77 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
    